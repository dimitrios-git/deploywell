---
# Usage: ansible-playbook -i inventory.ini --vault-password-file ansible_ssh_key.pub --diff docker_swarm_1_play.yml
# Nodes are defined in the inventory.ini file as manager and worker nodes. A webserver node group also defined for the Nginx and Portainer setup.
- name: Upgrade all packages and reboot the system
  hosts: playground
  become: true
  tags: system_update
  tasks:
    - name: Include system update tasks
      ansible.builtin.include_tasks:
        file: system_update.yml
    - name: Include system reboot tasks
      ansible.builtin.include_tasks:
        file: system_reboot.yml

- name: Configure a firewall for all nodes in the Docker Swarm
  hosts: docker_swarm_1
  become: true
  tags: firewall_setup
  vars:
    firewall_allowed_ports:
      - 22 # SSH - Don't lock yourself out
      - 2377 # Docker Swarm for communication with and between manager nodes
      - 7946 # Docker Swarm for overlay network node discovery
      - 4789 # Docker Swarm (configurable) for overlay network traffic
  tasks:
    - name: Include firewall role
      ansible.builtin.include_role:
        name: firewall

- name: Set up Docker Swarm
  hosts: docker_swarm_1
  become: true
  tags: swarm_setup
  tasks:
    - name: Check if Docker is installed
      ansible.builtin.command: docker --version
      register: docker_check
      changed_when: false
      ignore_errors: true

    - name: Include Docker role if Docker is not installed
      ansible.builtin.include_role:
        name: docker
      when: docker_check.rc != 0

    - name: Initialize Docker Swarm (manager node only) if not already initialized
      ansible.builtin.command: docker swarm init --advertise-addr {{ ansible_host }}
      ignore_errors: true
      register: swarm_init
      changed_when: false
      when: inventory_hostname in groups['docker_swarm_1_managers']

    # - name: Debug swarm_init variable
    #   ansible.builtin.debug:
    #     var: swarm_init
    #   when: inventory_hostname in groups['docker_swarm_1_managers']

    - name: Retrieve join command for worker nodes
      ansible.builtin.command: docker swarm join-token worker -q
      register: swarm_join_token
      changed_when: false
      when: inventory_hostname in groups['docker_swarm_1_managers']

    # - name: Debug hostnames
    #   ansible.builtin.debug:
    #     var: inventory_hostname

    # - name: Debug groups
    #   ansible.builtin.debug:
    #     var: groups

    - name: Join worker nodes to Docker Swarm
      when: inventory_hostname in groups['docker_swarm_1_workers']
      block:
        - name: Join Docker Swarm
          ansible.builtin.command: >
            docker swarm join --token {{ hostvars[groups['docker_swarm_1_managers'][0]]['swarm_join_token'].stdout }}
            {{ hostvars[groups['docker_swarm_1_managers'][0]]['ansible_host'] }}:2377
          register: join_swarm
          changed_when: join_swarm.stdout != ""
          ignore_errors: true

        # - name: Debug join_swarm variable
        #   ansible.builtin.debug:
        #     var: join_swarm

- name: Shutdown all worker nodes.
  hosts: docker_swarm_1_workers
  become: true
  tags: workers_shutdown
  tasks:
    - name: Include system shutdown tasks
      ansible.builtin.include_tasks:
        file: system_shutdown.yml

- name: Install and configure Nginx on the webserver node
  hosts: docker_swarm_1_webservers
  become: true
  tags: nginx_setup
  vars:
    firewall_allowed_ports:
      - 80 # HTTP
      - 443 # HTTPS
    docker_swarm_1_ips: "{{ groups['docker_swarm_1'] | map('extract', hostvars, ['ansible_host']) | list }}"
    docker_swarm_1_webservers_ips: "{{ groups['docker_swarm_1_webservers'] | map('extract', hostvars, ['ansible_host']) | list }}"
    nginx_proxy_configs:
      - server_name: snail-trading.com
        upstreams: "{{ docker_swarm_1_ips | map('regex_replace', '^(.*)$', '\\1:8080') | list }}"
        ssl: enabled
        ssl_email: dimitrios@charalampidis.pro
      - server_name: portainer.snail-trading.com
        upstreams: "{{ docker_swarm_1_webservers_ips | map('regex_replace', '^(.*)$', '\\1:9000') | list }}"
        ssl: enabled
        ssl_email: dimitrios@charalampidis.pro
  tasks:
    - name: Debug docker_swarm_1_ips
      ansible.builtin.debug:
        var: docker_swarm_1_ips
    - name: Debug docker_swarm_1_webservers_ips
      ansible.builtin.debug:
        var: docker_swarm_1_webservers_ips
    - name: Include firewall role
      ansible.builtin.include_role:
        name: firewall
    - name: Include nginx role
      ansible.builtin.include_role:
        name: nginx

- name: Set up Portainer stack
  hosts: docker_swarm_1_webserver
  become: true
  tags: portainer_setup
  vars:
    portainer_mode: swarm-ssl
    portainer_version: "2.20.3"
    portainer_proxy: portainer.snail-trading.com
  tasks:
    - name: Include Portainer role
      ansible.builtin.include_role:
        name: portainer

    - name: Manually configure Portainer and boot up the worker nodes.
      ansible.builtin.debug:
        msg: |
          TODO: 1. Access the Portainer at https://portainer.snail-trading.com. 2. Create a new admin user account. 3. Boot up the worker nodes.
