---
# tasks file for nginx_proxy
- name: Ensure Nginx configuration directory exists
  ansible.builtin.file:
    path: /etc/nginx/conf.d
    state: directory
    mode: "0755"

- name: Ensure Nginx sites-available directory exists
  ansible.builtin.file:
    path: /etc/nginx/sites-available
    state: directory
    mode: "0755"

- name: Ensure Nginx sites-enabled directory exists
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled
    state: directory
    mode: "0755"

- name: Template for nginx.conf
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: "0644"
  notify:
    - Restart Nginx
  when: ansible_distribution in ["Fedora", "CentOS", "Rocky", "AlmaLinux"]

- name: Template for creating Nginx proxy configuration
  ansible.builtin.template:
    src: nginx_proxy_conf.j2
    dest: /etc/nginx/sites-available/{{ item.server_name }}
    mode: "0644"
  vars:
    nginx_proxy_ssl_enabled: "{{ item.ssl_enabled }}"
    nginx_proxy_backend_port: "{{ item.upstream.split(':')[-1] }}"
    nginx_proxy_ssl_certificate: "/etc/nginx/ssl/{{ item.server_name }}/fullchain.pem"
    nginx_proxy_ssl_certificate_key: "/etc/nginx/ssl/{{ item.server_name }}/privkey.pem"
  notify:
    - Restart Nginx
  with_items: "{{ nginx_proxy_configs }}"
  loop_control:
    loop_var: item

- name: Enable Nginx site
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ item.server_name }}"
    dest: "/etc/nginx/sites-enabled/{{ item.server_name }}"
    state: link
  with_items: "{{ nginx_proxy_configs }}"
  loop_control:
    loop_var: item
  notify: Restart Nginx
