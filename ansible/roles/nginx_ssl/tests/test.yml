# This test is not tested. Likely you will needed a proper domain and a DNS record to test this role.
# Additionally, your test machine should be accessible from the internet.
# I have configured a Vagrantfile to test this role. But I need to test it.
---
# test file for nginx_ssl role
- name: Nginx SSL Role (TEST)
  hosts: vagrant
  gather_facts: false
  connection: local
  become: true
  become_method: ansible.builtin.sudo
  vars:
    nginx_proxy_configs:
      - server_name: app1.example.com
        upstream: 127.0.0.1:8081
        ssl_enabled: false
      - server_name: app2.example.com
        upstream: 127.0.0.1:8082
        ssl_enabled: true

    nginx_ssl_domains: "{{ nginx_proxy_configs | selectattr('ssl_enabled', 'eq', true) | map(attribute='server_name') | list }}"
    nginx_ssl_email: your-email@example.com

  pre_tasks:
    - name: Add entries to /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        state: present
        line: "{{ item }}"
      with_items:
        - "127.0.0.1 app1.example.com"
        - "127.0.0.1 app2.example.com"

    - name: Start HTTP server on port 8081
      ansible.builtin.command: "nohup python3 -m http.server 8081 --bind 127.0.0.1 &"
      async: 30
      poll: 0
      changed_when: false

    - name: Start HTTP server on port 8082
      ansible.builtin.command: "nohup python3 -m http.server 8082 --bind 127.0.0.1 &"
      async: 30
      poll: 0
      changed_when: false

    - name: Wait for HTTP servers to start
      ansible.builtin.pause:
        seconds: 5

  roles:
    - role: nginx
    - role: nginx_proxy
    - role: nginx_ssl

  tasks:
    - name: Debug initial variables
      ansible.builtin.debug:
        msg: "nginx_ssl_domains before roles: {{ nginx_ssl_domains }}"

    - name: Verify Nginx SSL Configuration
      ansible.builtin.command: "nginx -t"
      register: nginx_test
      ignore_errors: true
      changed_when: false

    - name: Show Nginx Test Output
      ansible.builtin.debug:
        var: nginx_test

    - name: Check if SSL certificates exist
      ansible.builtin.stat:
        path: "/etc/letsencrypt/live/app2.example.com/fullchain.pem"
      register: cert_stat

    - name: Ensure SSL certificates were created successfully
      ansible.builtin.assert:
        that:
          - cert_stat.stat.exists
          - cert_stat.stat.isreg
        fail_msg: "SSL certificates were not created successfully."

    - name: Check if SSL private key exists
      ansible.builtin.stat:
        path: "/etc/letsencrypt/live/app2.example.com/privkey.pem"
      register: key_stat

    - name: Ensure SSL private key was created successfully
      ansible.builtin.assert:
        that:
          - key_stat.stat.exists
          - key_stat.stat.isreg
        fail_msg: "SSL private key was not created successfully."
