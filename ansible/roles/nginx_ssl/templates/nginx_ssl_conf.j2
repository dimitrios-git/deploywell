{% for config in nginx_proxy_configs %}
server {
    listen 443 ssl;
    server_name {{ config.server_name }};

    {% if config.server_name in nginx_ssl_domains %}
    ssl_certificate /etc/nginx/ssl/{{ config.server_name }}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/{{ config.server_name }}/privkey.pem;
    {% else %}
    # Handle the case where SSL certificates are missing for this domain
    # You can optionally use a default certificate or handle it differently
    # For demonstration, we'll just log an error and continue
    # You might want to include additional error handling or logging here
    error_log /var/log/nginx/{{ config.server_name }}_ssl_error.log;
    return 404;
    {% endif %}

    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    location / {
        {% for domain in nginx_ssl_domains %}
        {% if domain == config.server_name %}
        {% set index = nginx_ssl_domains.index(domain) %}
        proxy_pass http://localhost:{{ nginx_ssl_backend_ports[index] }};
        {% endif %}
        {% endfor %}
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
{% endfor %}

{% for config in nginx_proxy_configs %}
server {
    listen 80;
    server_name {{ config.server_name }};
    return 301 https://$host$request_uri;
}
{% endfor %}
